[tool.poetry]
name = "python-examples"
version = "0.0.1"
description = "Python example code"
authors = ["Damon Allison <damon@damonallison.com>"]
license = "MIT"
readme = "README.md"

# Dependencies are specified with version constraints following:
# https://python-poetry.org/docs/dependency-specification/
#
# Caret: Does not modify the left most non-zero digit
#   ^1.2.3 == >=1.2.3 <2.0
#   ^0.0.3 == >=0.0.3 <0.0.4
#
# Tilde:
#   If you specify a major.minor.patch or major.minor, only patch level changes are allowed.
#   If you specify a major, then minor and patch are allowed.
#
#   ~1.2.3   >=1.2.3 <1.3.0
#   ~1.2     >=1.2.0 <1.3.0
#   ~1       >=1.0.0 <2.0.0
#
# Wildcard:
#   Allow for the latest version where the wildcard exists.
#
#   *     >=0.0.0
#   1.*   >=1.0.0 <2.0.0
#   1.2.* >= 1.2.0 <1.3.0
[tool.poetry.dependencies]
python = "^3.11"
dask = {version = "^2022.6.1", extras = ["distributed"]}
graphviz = "^0.20"
joblib = "^1.2.0"
lightgbm = "^3.3.2"
matplotlib = "^3.5.1"
nltk = "^3.7"
pandas = "^1.4.1"
protobuf = "^3.19.1"
py = "^1.11.0"
redis = "^4.0.1"
scikit-learn = "^1.0.2"
seaborn = "^0.11.2"
skl2onnx = "^1.0.0"
spacy = "^3.3.0"
SQLAlchemy = "^1.4.40"
starlette-context = "^0.3.4"
xgboost = "^1.6.1"
pydantic = {version = "^1.10.7", extras = ["dotenv"]}
pyarrow = "^12.0.0"
onnxruntime = "^1.15.1"

[tool.poetry.dev-dependencies]
pytest = "^6.2.3"
black = "^21.4b0"
pytest-asyncio = "^0.15.1"
#
# mypy is not up to a 1.x release cycle yet. This wildcard will use the latest
# (at least until they move to 1.0). Once they are on 1.0, use ^1
#
mypy = "^1.0.0"
ipython = "^7.26.0"
yappi = "^1.3.3"
requests = "^2.26.0"
requests-mock = "^1.9.3"
johnnydep = "^1.13"

[tool.pytest.ini_options]
# NOTE: The pytest team is reserving [tool.pytest] for future use, when they are
# ready to fully support pyproject.toml. [tool.pytest.ini_options] is used in
# the interim.
#
# "auto" makes all `async` tests asyncio driven, avoiding the need to mark each
# `async def test_` function with @pytest.mark.asyncio
#
# NOTE: This is *not* working. For some reason, the option is unrecognized.
#
# asyncio_mode = "auto"
log_cli = true
log_cli_level = "INFO"

#
# Register a custom marker for ml. By default, `make test` will skip ML tests by
# running:
#
# pytest -m "not slow"
#
# For more information on markers:
# https://docs.pytest.org/en/7.1.x/how-to/mark.html
markers = [
    "ml: marks tests as ml (which take a long time to run) - deselect with '-m \"not slow\"'"
]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

